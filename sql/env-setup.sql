-- 1.- Creating VW
USE ROLE SYSADMIN;
CREATE OR REPLACE WAREHOUSE XSMALL WITH COMMENT = 'X-Small: max cluster 3'
    WAREHOUSE_SIZE = 'XSMALL'
    WAREHOUSE_TYPE = 'STANDARD'
    AUTO_SUSPEND = 60
    AUTO_RESUME = TRUE
    MIN_CLUSTER_COUNT = 1
    MAX_CLUSTER_COUNT = 3
    SCALING_POLICY = 'ECONOMY';

USE ROLE SYSADMIN;
CREATE OR REPLACE WAREHOUSE SMALL WITH COMMENT = 'Small: max cluster 3'
    WAREHOUSE_SIZE = 'SMALL'
    WAREHOUSE_TYPE = 'STANDARD'
    AUTO_SUSPEND = 60
    AUTO_RESUME = TRUE
    MIN_CLUSTER_COUNT = 1
    MAX_CLUSTER_COUNT = 3
    SCALING_POLICY = 'ECONOMY';

-- 2.- Creating Database
USE ROLE SYSADMIN;
CREATE OR REPLACE DATABASE EDW_DEV
 DATA_RETENTION_TIME_IN_DAYS = 3
 MAX_DATA_EXTENSION_TIME_IN_DAYS = 3
 COMMENT = 'EDW DEV';

-- 3.- Creating schemas
USE DATABASE EDW_DEV;
CREATE OR REPLACE SCHEMA RAW WITH MANAGED ACCESS
COMMENT = 'This contains RAW data';

CREATE OR REPLACE SCHEMA STG WITH MANAGED ACCESS
COMMENT = 'This contains STG data';

-- 4.- Creating Snowpark SP
USE ROLE SYSADMIN;
USE DATABASE EDW_DEV;
USE SCHEMA STG;

CREATE OR REPLACE PROCEDURE REPLICATE_LIMIT(from_table STRING, to_table STRING, count INT)
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python')
HANDLER = 'run'
AS
$$
def run(session, from_table, to_table, count):
  session.table(from_table).limit(count).write.save_as_table(to_table)
  return "SUCCESS"
$$;
